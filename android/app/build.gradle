// android/app/build.gradle

plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
    // Si NO usas Firebase, puedes comentar la siguiente lÃ­nea:
    id "com.google.gms.google-services"
}

/* ------ Carga de propiedades (debe ir DESPUÃ‰S de plugins {}) ------ */
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// Si en local.properties no defines estas claves, usa valores por defecto:
def flutterVersionCode = (localProperties.getProperty('flutter.versionCode') ?: '1').toInteger()
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

/* ------------------------------ Android ------------------------------ */
android {
    namespace "ahorraton.com"               // ðŸ‘ˆ cÃ¡mbialo si tu paquete es otro
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true    // <--- importante

    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "ahorraton.com"       // ðŸ‘ˆ cÃ¡mbialo si usas otro id
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode
        versionName flutterVersionName
    }

    /* --------- Firma RELEASE (usando key.properties si existe) --------- */
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
        // Usa firma release si EXISTE key.properties; si no, compila con debug para no fallar
        if (keystorePropertiesFile.exists()) {
            signingConfig signingConfigs.release
        } else {
            signingConfig signingConfigs.debug
        }
        // shrink/minify opcional...
    }
    debug { }
    }
}

/* Ruta del proyecto Flutter */
flutter {
    source '../..'
}

/* Dependencias adicionales si las necesitas */
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.25" // o tu versiÃ³n
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.4"  // <--- agrega esto
}
